local function loadMainHub()
	-- Create a ScreenGui
	local screenGui = Instance.new("ScreenGui")
	screenGui.Parent = game.CoreGui -- Add to CoreGui to make it universal

	-- Create a scrolling frame to hold all the buttons
	local scrollFrame = Instance.new("ScrollingFrame")
	scrollFrame.Name = "ButtonScrollFrame"
	scrollFrame.Parent = screenGui
	scrollFrame.Size = UDim2.new(0, 250, 0, 400)
	scrollFrame.Position = UDim2.new(0.5, -125, 0.5, -200)
	scrollFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	scrollFrame.ScrollBarThickness = 8
	scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0) -- Initially set the canvas size to be dynamic
	scrollFrame.ClipsDescendants = true -- Clips the buttons inside the frame
	scrollFrame.Visible = false -- Initially hide the scrollFrame

	-- Add a Title at the top of the frame
	local titleLabel = Instance.new("TextLabel")
	titleLabel.Parent = scrollFrame
	titleLabel.Size = UDim2.new(1, 0, 0, 40)
	titleLabel.Position = UDim2.new(0, 0, 0, 0)
	titleLabel.BackgroundTransparency = 1
	titleLabel.Text = "Ralyes Hub â”‚ Slap battles" -- Title text
	titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	titleLabel.Font = Enum.Font.GothamBold
	titleLabel.TextSize = 18
	titleLabel.TextWrapped = true -- Wrap text if needed
	titleLabel.ZIndex = 2 -- Ensure it appears above other elements

	-- Create a UIListLayout to arrange the buttons in a vertical layout
	local listLayout = Instance.new("UIListLayout")
	listLayout.Parent = scrollFrame
	listLayout.Padding = UDim.new(0, 10) -- Padding between buttons
	listLayout.FillDirection = Enum.FillDirection.Vertical -- Arrange vertically
	listLayout.SortOrder = Enum.SortOrder.LayoutOrder

	-- Function to create a toggleable "Rhythm Spam" button
	local function createRhythmSpamButton()
		local rhythmButton = Instance.new("TextButton")
		rhythmButton.Parent = scrollFrame
		rhythmButton.Size = UDim2.new(0, 220, 0, 50)
		rhythmButton.Text = "Rhythm Spam" -- Button text
		rhythmButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		rhythmButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		rhythmButton.Font = Enum.Font.GothamBold
		rhythmButton.TextSize = 18
		rhythmButton.BorderSizePixel = 0
		-- Add rounded corners
		local corner = Instance.new("UICorner")
		corner.CornerRadius = UDim.new(0, 12)
		corner.Parent = rhythmButton
		-- Create the toggleable cube
		local cube = Instance.new("Frame")
		cube.Parent = rhythmButton
		cube.Size = UDim2.new(0, 20, 0, 20)
		cube.Position = UDim2.new(1, -30, 0.5, -10) -- Cube aligned to the right
		cube.BackgroundColor3 = Color3.fromRGB(128, 128, 128) -- Gray color by default
		-- Add rounded corners to the cube
		local cubeCorner = Instance.new("UICorner")
		cubeCorner.CornerRadius = UDim.new(0, 5)
		cubeCorner.Parent = cube
		-- Toggle state for the cube
		local isBlue = false
		rhythmButton.MouseButton1Click:Connect(function()
			if isBlue then
				cube.BackgroundColor3 = Color3.fromRGB(128, 128, 128) -- Change back to gray
			else
				cube.BackgroundColor3 = Color3.fromRGB(0, 170, 255) -- Change to blue
			end
			isBlue = not isBlue -- Toggle the state
		end)
	end

	-- Function to create buttons dynamically from a table
	local function createButtons(buttonConfigs)
		for _, config in ipairs(buttonConfigs) do
			local button = Instance.new("TextButton")
			button.Name = config.name
			button.Parent = scrollFrame
			button.Size = UDim2.new(0, 220, 0, 50)
			button.Text = config.name -- Button text
			button.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			button.TextColor3 = Color3.fromRGB(255, 255, 255)
			button.Font = Enum.Font.GothamBold
			button.TextSize = 18
			button.BorderSizePixel = 0
			-- Add rounded corners
			local corner = Instance.new("UICorner")
			corner.CornerRadius = UDim.new(0, 12)
			corner.Parent = button
			-- Add a gradient
			local gradient = Instance.new("UIGradient")
			gradient.Color = ColorSequence.new({
				ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 170, 255)), -- Blue
				ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 255, 127))  -- Green
			})
			gradient.Rotation = 45 -- Diagonal gradient
			gradient.Parent = button
			-- Button hover effect
			button.MouseEnter:Connect(function()
				button:TweenSize(UDim2.new(0, 240, 0, 60), "Out", "Quad", 0.2, true) -- Grow on hover
				button.TextSize = 20
			end)
			button.MouseLeave:Connect(function()
				button:TweenSize(UDim2.new(0, 220, 0, 50), "Out", "Quad", 0.2, true) -- Shrink back
				button.TextSize = 18
			end)
			-- Attach the provided function to the button
			button.MouseButton1Click:Connect(function()
				if config.script then
					pcall(config.script) -- Safely execute the script
				else
					print(button.Name .. " clicked!") -- Default action
				end
			end)
		end
		-- Update the canvas size of the ScrollingFrame to fit all buttons
		scrollFrame.CanvasSize = UDim2.new(0, 0, 0, listLayout.AbsoluteContentSize.Y + 10)
	end

	-- Example configuration for buttons
	local buttonConfigs = {
		{ name = "Free Titan", script = function() loadstring(game:HttpGet("https://pastebin.com/raw/qFehGGN1"))() end },
		{ name = "Anti Ragdoll", script = function() loadstring(game:HttpGet("https://pastebin.com/raw/v88jxFue"))() end },
		{ name = "Unlock All Gloves", script = function() loadstring(game:HttpGet("https://pastebin.com/raw/PAHTJTJM"))() end },
		{ name = "Slap Aura", script = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/barbarianTopG/Slap-aurasss/refs/heads/main/Slaps%20aura"))() end },
		{ name = "Anti Void", script = function() loadstring(game:HttpGet("https://pastebin.com/raw/dJjL1u2J"))() end },
		{ name = "Spam Defaut Ability", script = function() loadstring(game:HttpGet("https://pastebin.com/raw/TNNTymmJ"))() end },
		{ name = "idk", script = function() loadstring(game:HttpGet(""))() end },
		{ name = "Fling All", script = function() loadstring(game:HttpGet("https://pastebin.com/raw/tMw4DDGi"))() end },
		{ name = "Infinite Yield", script = function() loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))() end },
		{ name = "Nameless admin", script = function() loadstring(game:HttpGet('https://raw.githubusercontent.com/FilteringEnabled/NamelessAdmin/main/Source'))() end },
	}

	-- Create buttons using the configuration table
	createButtons(buttonConfigs)

	-- Add the "Rhythm Spam" button
	createRhythmSpamButton()

	-- Create Open/Close button at the middle left
	local openCloseButton = Instance.new("TextButton")
	openCloseButton.Name = "OpenCloseButton"
	openCloseButton.Parent = screenGui
	openCloseButton.Size = UDim2.new(0, 200, 0, 50)
	openCloseButton.Position = UDim2.new(0, 10, 0.5, -25) -- Middle left
	openCloseButton.Text = "Slap Battles Hub"
	openCloseButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	openCloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	openCloseButton.Font = Enum.Font.GothamBold
	openCloseButton.TextSize = 18
	openCloseButton.BorderSizePixel = 0
	-- Add rounded corners to the Open/Close button
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 12)
	corner.Parent = openCloseButton
	-- Add gradient effect to Open/Close button
	local gradient = Instance.new("UIGradient")
	gradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 170, 255)), -- Blue
		ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 255, 127))  -- Green
	})
	gradient.Rotation = 45 -- Diagonal gradient
	gradient.Parent = openCloseButton
	-- Add a function to toggle visibility and stylish open/close effects
	local guiOpen = false -- To track if the GUI is open or closed
	openCloseButton.MouseButton1Click:Connect(function()
		if guiOpen then
			-- Closing Effect
			scrollFrame:TweenSize(UDim2.new(0, 250, 0, 0), "Out", "Quad", 0.5, true, function()
				scrollFrame.Visible = false
			end)
			guiOpen = false
		else
			-- Opening Effect
			scrollFrame.Visible = true
			scrollFrame:TweenSize(UDim2.new(0, 250, 0, 400), "Out", "Quad", 0.5, true)
			guiOpen = true
		end
	end)
end

local function loadKeySystem(callback)
	local screenGui = Instance.new("ScreenGui")
	screenGui.Name = "RalyeHubAuth"
	screenGui.Parent = game.CoreGui

	local mainFrame = Instance.new("Frame")
	mainFrame.Parent = screenGui
	mainFrame.Size = UDim2.new(0, 320, 0, 420)
	mainFrame.Position = UDim2.new(0.5, -160, 0.5, -210)
	mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	mainFrame.BorderSizePixel = 0
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 8)
	corner.Parent = mainFrame
	local shadow = Instance.new("ImageLabel")
	shadow.Parent = mainFrame
	shadow.BackgroundTransparency = 1
	shadow.Image = "rbxassetid://10389822797"
	shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
	shadow.ImageTransparency = 0.5
	shadow.ScaleType = Enum.ScaleType.Slice
	shadow.SliceCenter = Rect.new(20, 20, 280, 280)
	shadow.Size = UDim2.new(1, 12, 1, 12)
	shadow.Position = UDim2.new(0, -6, 0, -6)
	shadow.ZIndex = 0

	local titleLabel = Instance.new("TextLabel")
	titleLabel.Parent = mainFrame
	titleLabel.Size = UDim2.new(1, 0, 0, 40)
	titleLabel.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	titleLabel.Text = "Ralye Hub Authentication"
	titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	titleLabel.Font = Enum.Font.GothamBold
	titleLabel.TextSize = 18
	local titleCorner = Instance.new("UICorner")
	titleCorner.CornerRadius = UDim.new(0, 8)
	titleCorner.Parent = titleLabel

	local listLayout = Instance.new("UIListLayout")
	listLayout.Parent = mainFrame
	listLayout.SortOrder = Enum.SortOrder.LayoutOrder
	listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	listLayout.Padding = UDim.new(0, 15)
	listLayout.From = UDim.new(0, 50) -- Corrected property to create top margin

	local statusLabel = Instance.new("TextLabel")
	statusLabel.Parent = mainFrame
	statusLabel.LayoutOrder = 1
	statusLabel.Size = UDim2.new(0.9, 0, 0, 20)
	statusLabel.BackgroundTransparency = 1
	statusLabel.Text = "Status: Awaiting input"
	statusLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
	statusLabel.Font = Enum.Font.Gotham
	statusLabel.TextSize = 16

	local function createButton(text, order)
		local button = Instance.new("TextButton")
		button.Parent = mainFrame
		button.LayoutOrder = order
		button.Size = UDim2.new(0.9, 0, 0, 45)
		button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
		button.Text = text
		button.TextColor3 = Color3.fromRGB(255, 255, 255)
		button.Font = Enum.Font.GothamSemibold
		button.TextSize = 18
		local btnCorner = Instance.new("UICorner")
		btnCorner.CornerRadius = UDim.new(0, 6)
		btnCorner.Parent = button
		return button
	end

	local getKeyButton = createButton("Get Key", 2)
	local joinDiscordButton = createButton("Join Discord", 3)
	
	local keyInput = Instance.new("TextBox")
	keyInput.Parent = mainFrame
	keyInput.LayoutOrder = 4
	keyInput.Size = UDim2.new(0.9, 0, 0, 45)
	keyInput.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
	keyInput.TextColor3 = Color3.fromRGB(220, 220, 220)
	keyInput.PlaceholderText = "Enter Key Manually..."
	keyInput.Font = Enum.Font.Gotham
	keyInput.TextSize = 16
	local inputCorner = Instance.new("UICorner")
	inputCorner.CornerRadius = UDim.new(0, 6)
	inputCorner.Parent = keyInput

	local checkKeyButton = createButton("Check Manual Key", 5)
	local pasteAndCheckButton = createButton("Paste & Check Key", 6)

	local API_BASE_URL = "https://ralye-hub-backend.vercel.app"
	local hwid = tostring(game:GetService("Players").LocalPlayer.UserId)
	local HttpService = game:GetService("HttpService")
	local request = request or syn.request or http.request or getgenv().request

	local function performVerification(key)
		if not key or key == "" then
			statusLabel.Text = "Status: Input was empty."
			return
		end

		statusLabel.Text = "Status: Verifying key..."

		local success, response = pcall(function()
			return request({
				Url = API_BASE_URL .. "/api/validate",
				Method = "POST",
				Headers = {["Content-Type"] = "application/json"},
				Body = HttpService:JSONEncode({key = key, hwid = hwid})
			})
		end)

		if not success then
			statusLabel.Text = "Error: Request failed."
			return
		end

		local jsonSuccess, responseData = pcall(HttpService.JSONDecode, HttpService, response.Body)

		if not jsonSuccess then
			statusLabel.Text = "Error: Invalid server response."
			return
		end

		if responseData.success == true then
			statusLabel.Text = "Key Verified! Loading..."
			wait(2)
			screenGui:Destroy()
			callback()
		else
			statusLabel.Text = "Key is denied. (" .. (responseData.message or "Unknown failure") .. ")"
		end
	end

	getKeyButton.MouseButton1Click:Connect(function()
		setclipboard(API_BASE_URL)
		statusLabel.Text = "Status: 'Get Key' link copied."
	end)

	joinDiscordButton.MouseButton1Click:Connect(function()
		setclipboard("https://discord.gg/KeF7zJCPHH")
		statusLabel.Text = "Status: Discord link copied."
	end)

	checkKeyButton.MouseButton1Click:Connect(function()
		performVerification(keyInput.Text)
	end)

	pasteAndCheckButton.MouseButton1Click:Connect(function()
		local clipboard = getclipboard()
		if clipboard then
			keyInput.Text = clipboard
			performVerification(clipboard)
		else
			statusLabel.Text = "Status: Clipboard is empty."
		end
	end)
	
	keyInput.FocusLost:Connect(function(enterPressed)
		if enterPressed then
			performVerification(keyInput.Text)
		end
	end)
end

loadKeySystem(loadMainHub)
